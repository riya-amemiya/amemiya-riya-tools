/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["AppController_getHello"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/date/now": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get the current date and time */
    get: operations["DateController_now"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/date/format": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Format a date */
    get: operations["DateController_format"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/zip-code/get-zip-codes": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get the current date and time */
    get: operations["ZipCodeController_getZipCodes"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/string/reverse": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Reverse a string */
    get: operations["StringController_reverseString"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/string/uppercase": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Convert a string to uppercase */
    get: operations["StringController_toUpperCase"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/string/lowercase": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Convert a string to lowercase */
    get: operations["StringController_toLowerCase"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/string/titlecase": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Convert a string to title case */
    get: operations["StringController_toTitleCase"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/string/capitalize": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Capitalize a string */
    get: operations["StringController_capitalize"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/cobalt/download": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Download a video */
    post: operations["CobaltController_download"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/cobalt/serverInfo": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Cobalt server info */
    get: operations["CobaltController_getServerInfo"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/uuid/v1": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Generate a UUID v1 */
    get: operations["UuidController_v1"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/uuid/v4": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Generate a UUID v4 */
    get: operations["UuidController_v4"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/uuid/v6": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Generate a UUID v6 */
    get: operations["UuidController_v6"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/uuid/v7": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Generate a UUID v7 */
    get: operations["UuidController_v7"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/uuid/version": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get UUID version */
    get: operations["UuidController_version"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/uuid/validate": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Validate UUID */
    get: operations["UuidController_validate"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    GetDateNowResponse: {
      /** @example 2020-01-01T00:00:00.000Z */
      message: string;
    };
    GetZipCodesResponse: {
      /** @example {
       *       "message": [
       *         {
       *           "id": 40364,
       *           "JIS_Code": "13113",
       *           "Old_Postal_Code": "\"150  \"",
       *           "Postal_Code": "1500002",
       *           "Prefecture_Name_Kana": "ﾄｳｷｮｳﾄ",
       *           "City_Ward_Town_Village_Name_Kana": "ｼﾌﾞﾔｸ",
       *           "Area_Name_Kana": "ｼﾌﾞﾔ",
       *           "Prefecture_Name": "東京都",
       *           "City_Ward_Town_Village_Name": "渋谷区",
       *           "Area_Name": "渋谷",
       *           "Indicates_More_Than_One_Postal_Code_for_the_Same_Area": "0",
       *           "Indicates_a_Subarea_with_Numbered_Addresses": "0",
       *           "Indicates_Presence_of_Chome_in_the_Area": "1",
       *           "Indicates_One_Postal_Code_for_Multiple_Areas": "0",
       *           "Update_Display": "0",
       *           "Change_Reason": "0"
       *         }
       *       ]
       *     } */
      message: string[];
    };
    GetStringReverseResponse: {
      /** @example dlrow olleh */
      message: string;
    };
    GetStringToUpperCaseResponse: {
      /** @example HELLO WORLD */
      message: string;
    };
    GetStringToLowerCaseResponse: {
      /** @example hello world */
      message: string;
    };
    GetStringToTitleCaseResponse: {
      /** @example Hello World */
      message: string;
    };
    GetStringCapitalizeResponse: {
      /** @example Hello world */
      message: string;
    };
    PostCobaltDownloadRequest: {
      url: string;
      /**
       * @default h264
       * @enum {string}
       */
      vCodec: "h264" | "av1" | "vp9";
      /** @default 720 */
      vQuality: string;
      /**
       * @default mp3
       * @enum {string}
       */
      aFormat: "best" | "mp3" | "ogg" | "wav" | "opus";
      /**
       * @default classic
       * @enum {string}
       */
      filenamePattern: "classic" | "pretty" | "basic" | "nerdy";
      /** @default false */
      isAudioOnly: boolean;
      /** @default false */
      isTTFullAudio: boolean;
      /** @default false */
      isAudioMuted: boolean;
      /** @default false */
      dubLang: boolean;
      /** @default false */
      disableMetadata: boolean;
      /** @default false */
      twitterGif: boolean;
      /** @default false */
      tiktokH265: boolean;
    };
    PickerItemDto: {
      type?: string;
      url: string;
      thumb?: string;
    };
    PostCobaltDownloadResponse: {
      status: string;
      text?: string;
      url?: string;
      pickerType?: string;
      picker?: components["schemas"]["PickerItemDto"][];
      audio?: string;
    };
    GetCobaltServerInfoResponse: {
      version: string;
      commit: string;
      branch: string;
      name: string;
      url: string;
      cors: number;
      startTime: string;
    };
    GetV1UuidResponse: {
      /**
       * @description Generated UUID v1
       * @example 123e4567-e89b-12d3-a456-426614174000
       */
      message: string;
    };
    GetV4UuidResponse: {
      /**
       * @description Generated UUID v4
       * @example 123e4567-e89b-42d3-a456-426614174000
       */
      message: string;
    };
    GetV6UuidResponse: {
      /**
       * @description Generated UUID v6
       * @example 1eb5e342-6e4d-6f54-80c1-586e9cf0c4a6
       */
      message: string;
    };
    GetV7UuidResponse: {
      /**
       * @description Generated UUID v7
       * @example 018b0310-a2c0-7a0e-b713-934d2a7df0b1
       */
      message: string;
    };
    GetVersionUuidResponse: {
      /**
       * @description Version of the UUID
       * @example 4
       */
      message: number | null;
    };
    GetValidateUuidResponse: {
      /**
       * @description Whether the UUID is valid
       * @example true
       */
      message: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  AppController_getHello: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  DateController_now: {
    parameters: {
      query?: {
        timeDifference?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successfully retrieved the current date and time */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetDateNowResponse"];
        };
      };
    };
  };
  DateController_format: {
    parameters: {
      query: {
        /** @example 2020-01-01T00:00:00.000Z */
        date: string;
        /** @example yyyy-MM-dd HH:mm:ss */
        formatString: string;
        /** @example ja */
        locale: unknown;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successfully formatted the date */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": string;
        };
      };
    };
  };
  ZipCodeController_getZipCodes: {
    parameters: {
      query?: {
        postal_code?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successfully retrieved the current date and time */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetZipCodesResponse"];
        };
      };
    };
  };
  StringController_reverseString: {
    parameters: {
      query: {
        /** @example hello world */
        str: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successfully reversed the string */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetStringReverseResponse"];
        };
      };
    };
  };
  StringController_toUpperCase: {
    parameters: {
      query: {
        /** @example hello world */
        str: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successfully converted the string to uppercase */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetStringToUpperCaseResponse"];
        };
      };
    };
  };
  StringController_toLowerCase: {
    parameters: {
      query: {
        /** @example HELLO WORLD */
        str: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successfully converted the string to lowercase */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetStringToLowerCaseResponse"];
        };
      };
    };
  };
  StringController_toTitleCase: {
    parameters: {
      query: {
        /** @example hello world */
        str: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successfully converted the string to title case */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetStringToTitleCaseResponse"];
        };
      };
    };
  };
  StringController_capitalize: {
    parameters: {
      query: {
        /** @example hello world */
        str: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successfully capitalized the string */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetStringCapitalizeResponse"];
        };
      };
    };
  };
  CobaltController_download: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PostCobaltDownloadRequest"];
      };
    };
    responses: {
      /** @description Cobalt API response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PostCobaltDownloadResponse"];
        };
      };
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PostCobaltDownloadResponse"];
        };
      };
    };
  };
  CobaltController_getServerInfo: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Cobalt server info */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetCobaltServerInfoResponse"];
        };
      };
    };
  };
  UuidController_v1: {
    parameters: {
      query?: {
        /** @description V1Options object */
        options?: Record<string, never>;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description UUID v1 generated successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetV1UuidResponse"];
        };
      };
    };
  };
  UuidController_v4: {
    parameters: {
      query?: {
        /** @description V4Options object */
        options?: Record<string, never>;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description UUID v4 generated successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetV4UuidResponse"];
        };
      };
    };
  };
  UuidController_v6: {
    parameters: {
      query?: {
        /** @description V6Options object */
        options?: Record<string, never>;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description UUID v6 generated successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetV6UuidResponse"];
        };
      };
    };
  };
  UuidController_v7: {
    parameters: {
      query?: {
        /** @description V7Options object */
        options?: Record<string, never>;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description UUID v7 generated successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetV7UuidResponse"];
        };
      };
    };
  };
  UuidController_version: {
    parameters: {
      query: {
        /**
         * @description UUID to get version for
         * @example 123e4567-e89b-42d3-a456-426614174000
         */
        uuid: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description UUID version returned successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetVersionUuidResponse"];
        };
      };
    };
  };
  UuidController_validate: {
    parameters: {
      query: {
        /**
         * @description UUID to validate
         * @example 123e4567-e89b-42d3-a456-426614174000
         */
        uuid: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description UUID validation result returned successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GetValidateUuidResponse"];
        };
      };
    };
  };
}
